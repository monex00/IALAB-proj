rl -s learning on # enable RL
indifferent-selection --epsilon-greedy # use epsilon-greedy decision making
indifferent-selection --epsilon 0.1 # 10% deviation from greedy

sp {propose*initialize-left-right
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> +)
   (<o> ^name initialize-left-right)
}

##
# Store the available directions
# and associated reward on the state
##
sp {apply*initialize-left-right
   (state <s> ^operator <op>)
   (<op> ^name initialize-left-right)
-->
   (<s> ^name left-right
        ^direction <d1> <d2>
        ^location start
        ^location2 start)
   (<d1> ^name left ^reward -1)
   (<d2> ^name right ^reward 1)
}

##
# Propose moving in any available direction
##
sp {left-right*propose*move
   (state <s> ^name left-right
              ^direction <d>
              ^location start
              ^location2 start)
   (<d> ^name <dir>)
-->
   (<s> ^operator <op> +)
   (<op> ^name move
         ^dir <dir>)
}

sp {left-right*propose*move-2
   (state <s> ^name left-right
              ^direction <d>
              ^location {<> start}
              ^location2 start)
   (<d> ^name <dir>)
-->
   (<s> ^operator <op> +)
   (<op> ^name move-2
         ^dir <dir>)
}

##
# Soar-RL rule for moving left
##
sp {left-right*rl*left
   (state <s> ^name left-right
              ^location start
              ^location2 start
              ^operator <op> +)
   (<op> ^name move
         ^dir left)
-->
   (<s> ^operator <op> = 0)
}

sp {left-right*rl*left-2
   (state <s> ^name left-right
              ^location {<> start}
              ^location2 start
              ^operator <op> +)
   (<op> ^name move-2
         ^dir left)
-->
   (<s> ^operator <op> = 0)
}

##
# Soar-RL rule for moving right
##
sp {left-right*rl*right
   (state <s> ^name left-right
              ^location start
              ^location2 start
              ^operator <op> +)
   (<op> ^name move
         ^dir right)
-->
   (<s> ^operator <op> = 0)
}

sp {left-right*rl*right-2
   (state <s> ^name left-right
              ^location {<> start}
              ^location2 start
              ^operator <op> +)
   (<op> ^name move-2
         ^dir right)
-->
   (<s> ^operator <op> = 0)
}

##
# When a direction is chosen:
# - change location
# - output choice
##
sp {apply*move
   (state <s> ^operator <op>
              ^location start
              ^location2 start)
   (<op> ^name move
         ^dir <dir>)
-->
   (<s> ^location start - <dir>)
   (write (crlf) |Moved: | <dir>)
}

sp {apply*move-2
   (state <s> ^operator <op>
              ^location {<> start}
              ^location2 start)
   (<op> ^name move-2
         ^dir <dir>)
-->
   (<s> ^location2 start - <dir>)
   (write (crlf) |Moved: | <dir>)
}

##
# When a direction is chosen, assert the associated reward
##
sp {elaborate*reward
   (state <s> ^name left-right
              ^reward-link <r>
              ^location <d-name>
              ^location2 start
              ^direction <dir>)
   (<dir> ^name <d-name> ^reward <d-reward>)
   
-->
   (<r> ^reward <rr>)
   (<rr> ^value <d-reward>)
   (write (crlf) |ELABORO REWARD 1 |)
}

sp {elaborate*reward-2
   (state <s> ^name left-right
              ^reward-link <r>
              ^location {<> start}
              ^location2 <d-name>
              ^direction <dir>)
   (<dir> ^name <d-name> ^reward <d-reward>)
-->
   (<r> ^reward <rr>)
   (<rr> ^value <d-reward>)
   (write (crlf) |ELABORO REWARD 2 |)
}

##
# When a direction is chosen, halt
##
sp {elaborate*done
   (state <s> ^name left-right
              ^location {<> start}
              ^location2 {<> start})
-->
   (halt)
}